name: Create and publish a docker image to GitHub Container Registry and Docker-hub

on:
  release:
    types: [published]

  push:
    tags:
      - 'v*'
    paths:
      - 'docker/makers-dockerfile'


jobs:
  build-and-push-image-to-ghcr:
    runs-on: ubuntu-24.04


    env:
      GHCR_REGISTRY: ghcr.io
      # issue : organization "Infineon" with capital "I" not allowed.
      IMAGE_NAME: infineon/makers-docker


    permissions:
      contents: read
      packages: write
      attestations: write
      id-token: write


    steps:
      # - name: Checkout repository
      #   uses: actions/checkout@v4


      - name: Log in to the Container registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.GHCR_REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}


      - name: Extract metadata (tags, labels) for docker
        id: meta_ghcr
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.GHCR_REGISTRY }}/${{ env.IMAGE_NAME }}


      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3


      - if: ${{ github.event_name == 'push' }}
        name: Build and push docker image to ghcr.io
        id: push_ghcr
        uses: docker/build-push-action@v6
        with:
          # context: .
          file: docker/makers-dockerfile
          push: true
          tags: ${{ env.GHCR_REGISTRY }}/${{ env.IMAGE_NAME }}:push
          labels: ${{ steps.meta_ghcr.outputs.labels }}
          build-args: |
            BRANCH=main


      - if: ${{ github.event_name == 'release' }}
        name: Release docker image to ghcr.io with tags
        id: release_ghcr
        uses: docker/build-push-action@v5
        with:
          context: .
          file: docker/makers-dockerfile
          push: true
          tags: ${{ steps.meta_ghcr.outputs.tags }}
          labels: ${{ steps.meta_ghcr.outputs.labels }}
          build-args: |
            BRANCH=main


      # - if: ${{ github.event_name == 'release' }}
      #   name: Generate artifact attestation
      #   uses: actions/attest-build-provenance@v2
      #   with:
      #     subject-name: ${{ env.GHCR_REGISTRY }}/${{ env.IMAGE_NAME}}
      #     subject-digest: ${{ steps.release_ghcr.outputs.digest }}
      #     push-to-registry: true



  build-and-push-image-to-docker:
    runs-on: ubuntu-24.04
    needs: build-and-push-image-to-ghcr


    env:
      DOCKER_REGISTRY: docker.io
      IMAGE_NAME: ${{ secrets.DOCKERHUB_USERNAME }}/makers-docker


    permissions:
      contents: read
      packages: write
      attestations: write
      id-token: write


    steps:
      # - name: Checkout repository
      #   uses: actions/checkout@v4


      - name: Log in to the docker hub
        uses: docker/login-action@v3
        with:
          registry: ${{ env.DOCKER_REGISTRY }}
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}


      - name: Extract metadata (tags, labels) for docker
        id: meta_docker
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.DOCKER_REGISTRY }}/${{ env.IMAGE_NAME }}


      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
    

      - if: ${{ github.event_name == 'push' }}
        name: Build and push docker image to docker-hub
        id: push_docker
        uses: docker/build-push-action@v6
        with:
          # context: .
          file: docker/makers-dockerfile
          push: true
          tags: ${{ env.DOCKER_REGISTRY }}/${{ env.IMAGE_NAME }}:push
          labels: ${{ steps.meta_docker.outputs.labels }}
          build-args: |
            BRANCH=mainnnnnn


      - if: ${{ github.event_name == 'release' }}
        name: Release docker image to docker-hub
        id: release_docker
        uses: docker/build-push-action@v5
        with:
          context: .
          file: docker/makers-dockerfile
          push: true
          tags: ${{ steps.meta_docker.outputs.tags }}
          labels: ${{ steps.meta_docker.outputs.labels }}
          build-args: |
            BRANCH=mainnnnnn

          
      # - if: ${{ github.event_name == 'release' }}
      #   name: Generate artifact attestation
      #   uses: actions/attest-build-provenance@v2
      #   with:
      #     subject-name: index.${{ env.DOCKER_REGISTRY }}/${{ env.IMAGE_NAME }}
      #     subject-digest: ${{ steps.release_docker.outputs.digest }}
      #     push-to-registry: true
